// FILE: src/main/java/fr/univ/bomberman/model/Rank.java
package fr.univ.bomberman.model;

/**
 * Ã‰numÃ©ration pour les rangs des joueurs dans Super Bomberman
 */
public enum Rank {
    BRONZE("ðŸ¥‰ Bronze", 0, "#cd7f32"),
    SILVER("ðŸ¥ˆ Argent", 10, "#c0c0c0"),
    GOLD("ðŸ¥‡ Or", 25, "#ffd700"),
    PLATINUM("ðŸ’Ž Platine", 50, "#e5e4e2"),
    DIAMOND("ðŸ‘‘ Diamant", 100, "#b9f2ff");

    private final String displayName;
    private final int winsRequired;
    private final String color;

    /**
     * Constructeur de l'Ã©numÃ©ration Rank
     * @param displayName Nom affichÃ© du rang avec emoji
     * @param winsRequired Nombre de victoires nÃ©cessaires pour atteindre ce rang
     * @param color Code couleur hexadÃ©cimal associÃ© au rang
     */
    Rank(String displayName, int winsRequired, String color) {
        this.displayName = displayName;
        this.winsRequired = winsRequired;
        this.color = color;
    }

    // ============================================================================
    // GETTERS
    // ============================================================================

    /**
     * @return Le nom affichÃ© du rang avec emoji
     */
    public String getDisplayName() {
        return displayName;
    }

    /**
     * @return Le code couleur hexadÃ©cimal associÃ© au rang
     */
    public String getColor() {
        return color;
    }

    // ============================================================================
    // MÃ‰THODES STATIQUES
    // ============================================================================

    /**
     * Calcule le rang appropriÃ© basÃ© sur le nombre de victoires
     * @param totalWins Nombre total de victoires du joueur
     * @return Le rang correspondant au nombre de victoires
     */
    public static Rank calculateRank(int totalWins) {
        if (totalWins >= DIAMOND.winsRequired) return DIAMOND;
        if (totalWins >= PLATINUM.winsRequired) return PLATINUM;
        if (totalWins >= GOLD.winsRequired) return GOLD;
        if (totalWins >= SILVER.winsRequired) return SILVER;
        return BRONZE;
    }


    // ============================================================================
    // MÃ‰THODES D'INSTANCE
    // ============================================================================

    /**
     * VÃ©rifie si ce rang est supÃ©rieur Ã  un autre rang
     * @param otherRank Le rang Ã  comparer
     * @return true si ce rang est supÃ©rieur
     */
    public boolean isHigherThan(Rank otherRank) {
        return this.ordinal() > otherRank.ordinal();
    }

    // ============================================================================
    // MÃ‰THODES UTILITAIRES
    // ============================================================================


    @Override
    public String toString() {
        return displayName;
    }
}